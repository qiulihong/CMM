security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        in_memory:
            users:
                user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
                leon : { password: leon, roles: [ 'ROLE_ADMIN' ] }
        fos_userbundle:
          id: fos_user.user_manager

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/demo/secured/login$
            security: false
            
        main:
            pattern:    ^/
            form_login:
                provider: fos_userbundle
                #login_path: /login
                #check_path: /login_check
                #username_parameter: _useremail
                #password_parameter: _password
            logout: true
                #path:   /logout
                #target: /
            anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin$, role: ROLE_ADMIN }
        - { path: ^/looks/new$, role: ROLE_USER }
        - { path: ^/looks/edit$, role: ROLE_USER }
        - { path: ^/looks/upload$, role: ROLE_USER }
        - { path: ^/looks/crop$, role: ROLE_USER }
        - { path: ^/user/edit$, role: ROLE_USER }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        #- { path: ^/_internal, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN
